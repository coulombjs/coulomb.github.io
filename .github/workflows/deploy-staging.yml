name: deploy-staging

on:
  push:
    branches: staging

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    environment:
      name: staging
    steps:
      - name: Setup prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y curl make libxml2-dev libxslt-dev openssl
      - name: Setup snaps
        run: |
          sudo snap install yq
          sudo snap install aws-cli --classic
          sudo snap install node --classic --channel=10/stable
      - name: Use Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
          architecture: 'x64'
      - name: Use Node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - uses: actions/checkout@master
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Update gems
        run: |
          gem install bundler -v "~> 2"
          bundle install --jobs 4 --retry 3
      - name: Setup npm
        run: |
          npm install
      - name: Build site
        env:
          JEKYLL_ENV: production
        run: |
          make _site


      - name: Deploy to coulomb.org
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        run: |
          aws configure set default.s3.max_concurrent_requests 100
          aws configure set default.s3.max_queue_size 10000
          aws configure set default.s3.use_accelerate_endpoint true
          aws configure set default.s3.payload_signing_enabled false
          aws s3 sync _site s3://$S3_BUCKET_NAME --region=$AWS_REGION --delete --no-progress --exclude "*" --include "*.html" --content-type "text/html; charset=utf-8"
          aws s3 sync _site s3://$S3_BUCKET_NAME --region=$AWS_REGION --delete --no-progress --exclude "*" --include "*.json" --content-type "application/json; charset=utf-8"
          aws s3 sync _site s3://$S3_BUCKET_NAME --region=$AWS_REGION --delete --no-progress --exclude "*" --include "*.jsonld" --content-type "application/ld+json; charset=utf-8"
          aws s3 sync _site s3://$S3_BUCKET_NAME --region=$AWS_REGION --delete --no-progress --exclude "*" --include "*.ttl" --content-type "text/turtle; charset=utf-8"
          aws s3 sync _site s3://$S3_BUCKET_NAME --region=$AWS_REGION --delete --no-progress --include "*" --exclude "*.html" --exclude "*.json" --exclude "*.jsonld" --exclude "*.ttl"
          aws configure set preview.cloudfront true
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
